import sys
import traceback

def preload_models():
    """Preload t·∫•t c·∫£ models tr∆∞·ªõc khi kh·ªüi ƒë·ªông server"""
    print("[SYSTEM] üöÄ B·∫Øt ƒë·∫ßu preload models...")

    try:
        from app.models.model_manager import ModelManager
        model_manager = ModelManager()
        # Ch·ªâ load face recognition model
        model_manager._load_face_recognition_model()
        print("[SYSTEM] ‚úÖ Face recognition model preloaded successfully")

        # Initialize face authentication manager
        try:
            from app.agents.customer_agent.face_auth import face_auth_manager
            # Face auth manager t·ª± ƒë·ªông kh·ªüi t·∫°o khi import
            stats = face_auth_manager.get_performance_stats()
            if stats['models_ready'] and stats['embeddings_loaded']:
                print("[SYSTEM] ‚úÖ Face authentication manager ƒë√£ s·∫µn s√†ng!")
            else:
                print(f"[SYSTEM] ‚ö†Ô∏è Face auth manager: models_ready={stats['models_ready']}, embeddings_loaded={stats['embeddings_loaded']}")
        except Exception as e:
            print(f"[SYSTEM] ‚ö†Ô∏è L·ªói kh·ªüi t·∫°o face authentication manager: {str(e)}")

        return True

    except Exception as e:
        print(f"[SYSTEM] ‚ùå L·ªói preload models: {str(e)}")
        traceback.print_exc(file=sys.stdout)
        return False

print("[SYSTEM] B·∫Øt ƒë·∫ßu kh·ªüi t·∫°o ·ª©ng d·ª•ng...")

try:
    from app import create_app, socketio
    print("[SYSTEM] Import th√†nh c√¥ng")

    # Preload models tr∆∞·ªõc khi t·∫°o app (optional, kh√¥ng fail n·∫øu l·ªói)
    try:
        preload_models()
    except Exception as e:
        print(f"[SYSTEM] ‚ö†Ô∏è L·ªói preload models: {str(e)}")
        print("[SYSTEM] Ti·∫øp t·ª•c kh·ªüi ƒë·ªông server...")

    print("[SYSTEM] ƒêang t·∫°o app...")
    app = create_app()
    print("[SYSTEM] App ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng")

except Exception as e:
    print(f"[SYSTEM ERROR] L·ªói khi kh·ªüi t·∫°o app: {str(e)}")
    traceback.print_exc(file=sys.stdout)
    input("Nh·∫•n Enter ƒë·ªÉ tho√°t...")
    sys.exit(1)

if __name__ == '__main__':
    try:
        print("[SYSTEM] Chatbot kh·ªüi ƒë·ªông th√†nh c√¥ng")
        print("[SYSTEM] üéâ H·ªá th·ªëng ƒë√£ s·∫µn s√†ng v·ªõi t·∫•t c·∫£ models ƒë∆∞·ª£c preload!")

        # Run with SocketIO instead of app.run
        # S·ª≠ d·ª•ng c·ªïng 5001 thay v√¨ c·ªïng m·∫∑c ƒë·ªãnh 5000
        # T·∫Øt ch·∫ø ƒë·ªô debug ƒë·ªÉ tr√°nh kh·ªüi ƒë·ªông l·∫°i li√™n t·ª•c
        socketio.run(app, debug=False, port=5001, use_reloader=False)
    except Exception as e:
        print(f"[SYSTEM ERROR] {str(e)}")
        traceback.print_exc(file=sys.stdout)
        input("Nh·∫•n Enter ƒë·ªÉ tho√°t...")